version: "3.3"

services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: on-failure
    network_mode: host

  relay:
    #image: gbrlanrd/relay:latest
    image: spring/relay:latest
    ports:
      - "8090:8090"
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:root@localhost:27017/
      - SPRING_RABBITMQ_HOST=localhost  
    network_mode: host

  consumer:
    #image: gbrlanrd/consumer:latest
    image: spring/consumer:latest
    ports:
      - "8091:8091"
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongodb
      - relay
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:root@localhost:27017/
      - SPRING_RABBITMQ_HOST=localhost  
    network_mode: host

  mongodb:
    image: mongo:4.4.3
    hostname: mongodb
    environment:
      - MONGO_INITDB_DATABASE=client
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    ports:
      - "27017:27017"
    volumes:
      - ./Docker/mongod.conf:/etc/mongod.conf

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-volume:/prometheus
    command: --config.file=/etc/prometheus/prometheus.yaml
    network_mode: host

  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - grafana-volume:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=true
    network_mode: host

volumes:
  prometheus-volume:
  grafana-volume: